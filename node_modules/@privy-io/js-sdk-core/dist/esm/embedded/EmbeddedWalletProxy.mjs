import{EventCallbacksQueue as e}from"./EventCallbackQueue.mjs";import{PrivyIframeError as t}from"./errors.mjs";import"./types.mjs";const r=15e3;const a=(i=0,()=>"id-"+i++);var i;const o=(e,t)=>"bigint"==typeof t?t.toString():t,n=e=>new Promise((t=>{setTimeout(t,e)})),s=(e,{ms:t,msg:a})=>Promise.race([e,new Promise(((e,i)=>{setTimeout((()=>{i(new Error(a))}),t??r)}))]),c=new e;class h{ready;cache;_embeddedWalletMessagePoster;constructor(e){this.ready=!1,this.cache=new Map,this._embeddedWalletMessagePoster=e}ping(e=15e3){return s(this.invoke("privy:iframe:ready",{}),{msg:"Ping reached timeout",ms:e})}create(e){return s(this.waitForReady().then((()=>this.invoke("privy:wallet:create",e))),{msg:"Operation reached timeout: create"})}connect(e){return s(this.waitForReady().then((()=>this.invoke("privy:wallet:connect",e))),{msg:"Operation reached timeout: connect"})}recover(e){return s(this.waitForReady().then((()=>this.invoke("privy:wallet:recover",e))),{msg:"Operation reached timeout: recover",ms:6e4})}setRecovery(e){return s(this.waitForReady().then((()=>this.invoke("privy:wallet:set-recovery",e))),{msg:"Operation reached timeout: setRecovery",ms:6e4})}rpc(e){return s(this.waitForReady().then((()=>this.invoke("privy:wallet:rpc",e))),{msg:"Operation reached timeout: rpc"})}createSolana(e){return s(this.waitForReady().then((()=>this.invoke("privy:solana-wallet:create",e))),{msg:"Operation reached timeout: create"})}createAdditionalSolana(e){return s(this.waitForReady().then((()=>this.invoke("privy:solana-wallet:create-additional",e))),{msg:"Operation reached timeout: create"})}connectSolana(e){return s(this.waitForReady().then((()=>this.invoke("privy:solana-wallet:connect",e))),{msg:"Operation reached timeout: connect"})}recoverSolana(e){return s(this.waitForReady().then((()=>this.invoke("privy:solana-wallet:recover",e))),{msg:"Operation reached timeout: recover",ms:6e4})}solanaRpc(e){return s(this.waitForReady().then((()=>this.invoke("privy:solana-wallet:rpc",e))),{msg:"Operation reached timeout: rpc"})}handleEmbeddedWalletMessages(e){const{reject:r,resolve:a}=c.dequeue(e.event,e.id);return function(e){return void 0!==e.error}(e)?r(new t(e.error.type,e.error.message)):a(e.data)}waitForReady(){return this.ready?Promise.resolve():new Promise((async(e,t)=>{for(;!this.ready;)this.invoke("privy:iframe:ready",{}).then((()=>{this.ready=!0,e()})).catch(t),await n(150)}))}invoke(e,t){const r=((e,t)=>`${e}${JSON.stringify(t,o)}`)(e,t);if("privy:wallet:create"===e||"privy:solana-wallet:create"===e){const e=this.cache.get(r);if(e)return e}const i=new Promise(((r,i)=>{const o=a();c.enqueue(o,{resolve:r,reject:i}),this._embeddedWalletMessagePoster.postMessage(JSON.stringify({id:o,event:e,data:t}),"*")})).finally((()=>{this.cache.delete(r)}));return this.cache.set(r,i),i}}export{r as DEFAULT_WALLET_PROXY_TIMEOUT_MS,h as EmbeddedWalletProxy};
