import{FetchError as e}from"ofetch";import{createContext as t,useContext as i}from"react";var n;class a extends Error{toString(){return`${this.type}${this.privyErrorCode?`-${this.privyErrorCode}`:""}: ${this.message}${this.cause?` [cause: ${this.cause}]`:""}`}constructor(e,t,i){super(e),t instanceof Error&&(this.cause=t),this.privyErrorCode=i}}class s extends a{constructor(e,t,i,n,a,s){super(i,n,a),this.type=e,this.status=t,this.data=s}}class r extends a{constructor(e,t,i){super(e,t,i),this.type="client_error"}}class l extends r{constructor(){super("Request timed out",void 0,"client_request_timeout")}}class o extends a{constructor(e,t,i){super(e,t,i),this.type="connector_error"}}const _=t=>{if(t instanceof a)return t;if(!(t instanceof e))return u(t);if(!t.response)return new s("api_error",null,t.message,t);let{type:i,message:n,error:r,code:l}=t.data;return new s(i||"ApiError",t.response.status,n||r,t,l,t.data)},u=e=>e instanceof a?e:e instanceof Error?new r(e.message,e):new r(`Internal error: ${e}`);var d;(n=d||(d={})).OAUTH_ACCOUNT_SUSPENDED="oauth_account_suspended",n.MISSING_OR_INVALID_PRIVY_APP_ID="missing_or_invalid_privy_app_id",n.MISSING_OR_INVALID_PRIVY_ACCOUNT_ID="missing_or_invalid_privy_account_id",n.MISSING_OR_INVALID_TOKEN="missing_or_invalid_token",n.INVALID_DATA="invalid_data",n.INVALID_CAPTCHA="invalid_captcha",n.LINKED_TO_ANOTHER_USER="linked_to_another_user",n.CANNOT_LINK_MORE_OF_TYPE="cannot_link_more_of_type",n.FAILED_TO_LINK_ACCOUNT="failed_to_link_account",n.FAILED_TO_UPDATE_ACCOUNT="failed_to_update_account",n.USER_EXITED_UPDATE_FLOW="exited_update_flow",n.ALLOWLIST_REJECTED="allowlist_rejected",n.OAUTH_USER_DENIED="oauth_user_denied",n.OAUTH_UNEXPECTED="oauth_unexpected",n.UNKNOWN_AUTH_ERROR="unknown_auth_error",n.USER_EXITED_AUTH_FLOW="exited_auth_flow",n.USER_EXITED_LINK_FLOW="exited_link_flow",n.USER_EXITED_SET_PASSWORD_FLOW="user_exited_set_password_flow",n.MUST_BE_AUTHENTICATED="must_be_authenticated",n.UNKNOWN_CONNECT_WALLET_ERROR="unknown_connect_wallet_error",n.GENERIC_CONNECT_WALLET_ERROR="generic_connect_wallet_error",n.CLIENT_REQUEST_TIMEOUT="client_request_timeout",n.INVALID_CREDENTIALS="invalid_credentials",n.MISSING_MFA_CREDENTIALS="missing_or_invalid_mfa",n.UNKNOWN_MFA_ERROR="unknown_mfa_error",n.EMBEDDED_WALLET_ALREADY_EXISTS="embedded_wallet_already_exists",n.EMBEDDED_WALLET_NOT_FOUND="embedded_wallet_not_found",n.UNKNOWN_EMBEDDED_WALLET_ERROR="unknown_embedded_wallet_error",n.EMBEDDED_WALLET_PASSWORD_UNCONFIRMED="embedded_wallet_password_unconfirmed",n.EMBEDDED_WALLET_PASSWORD_ALREADY_EXISTS="embedded_wallet_password_already_exists",n.EMBEDDED_WALLET_RECOVERY_ALREADY_EXISTS="embedded_wallet_recovery_already_exists",n.TRANSACTION_FAILURE="transaction_failure",n.UNSUPPORTED_CHAIN_ID="unsupported_chain_id",n.NOT_SUPPORTED="not_supported",n.CAPTCHA_TIMEOUT="captcha_timeout",n.INVALID_MESSAGE="invalid_message",n.UNABLE_TO_SIGN="unable_to_sign",n.CAPTCHA_FAILURE="captcha_failure",n.CAPTCHA_DISABLED="captcha_disabled",n.SESSION_STORAGE_UNAVAILABLE="session_storage_unavailable",n.TOO_MANY_REQUESTS="too_many_requests",n.USER_LIMIT_REACHED="max_accounts_reached",n.DISALLOWED_LOGIN_METHOD="disallowed_login_method",n.DISALLOWED_PLUS_EMAIL="disallowed_plus_email",n.PASSKEY_NOT_ALLOWED="passkey_not_allowed",n.USER_DOES_NOT_EXIST="user_does_not_exist",n.INSUFFICIENT_BALANCE="insufficient_balance",n.ACCOUNT_TRANSFER_REQUIRED="account_transfer_required";class c extends r{constructor(){super("Method called before `ready`. Ensure you wait until `ready` is true before calling.")}}class E extends r{constructor(e="Embedded wallet error",t){super(e,t,"unknown_embedded_wallet_error")}}class A extends r{constructor(e="User must be authenticated"){super(e,void 0,"must_be_authenticated")}}class p extends r{constructor(e){super("This application is in development mode and must be upgraded to production to log in new users.",e,"max_accounts_reached")}}const S=()=>{throw Error("You need to wrap your application with the <PrivyProvider> initialized with your app id.")},h=e=>()=>{throw Error(e.trim())},T=t({isNewUserThisSession:!1,walletConnectionStatus:null,connectors:[],solanaWallets:[],rpcConfig:{rpcUrls:{}},showFiatPrices:!0,chains:[],clientAnalyticsId:null,pendingTransaction:null,client:null,appId:"notAdded",customAuthStatus:{status:"not-enabled"},noPromptOnSignature:{current:!1},nativeTokenSymbolForChainId:S,initializeWalletProxy:S,getAuthMeta:S,getAuthFlow:S,closePrivyModal:S,openPrivyModal:S,connectWallet:S,initLoginWithWallet:S,loginWithWallet:S,initLoginWithFarcaster:S,loginWithFarcaster:S,loginWithCode:S,initLoginWithEmail:S,initLoginWithSms:S,initUpdateEmail:S,initUpdatePhone:S,resendEmailCode:S,resendSmsCode:S,initLoginWithHeadlessOAuth:S,loginWithHeadlessOAuth:S,crossAppAuthFlow:S,initLoginWithOAuth:S,recoveryOAuthFlow:S,loginWithOAuth:S,passkeyAuthState:{status:"initial"},setPasskeyAuthState:S,initLoginWithPasskey:S,loginWithPasskey:S,initLinkWithPasskey:S,linkWithPasskey:S,refreshUser:S,loginWithGuestAccountFlow:S,walletProxy:null,createAnalyticsEvent:S,acceptTerms:S,getUsdTokenPrice:S,getUsdPriceForSol:S,recoverEmbeddedEthereumWallet:S,getMoonpaySignedUrl:S,initCoinbaseOnRamp:S,getCoinbaseOnRampStatus:S,updateWallets:S,fundWallet:S,fundSolanaWallet:S,setReadyToTrue:S,requestFarcasterSignerStatus:S,initLoginWithTelegram:S,loginWithTelegram:S,generateSiweMessage:S,generateSiweMessageForSmartWallet:S,linkWithSiwe:S,linkSmartWallet:S,initDelegateAction:S,embeddedSolanaWallet:null,createEmbeddedSolanaWallet:S,recoverEmbeddedSolanaWallet:S,exportSolanaWallet:S,solanaSignMessage:S,connectCoinbaseSmartWallet:S,initiateAccountTransfer:S,emailOtpState:{status:"initial"},setEmailOtpState:S,smsOtpState:{status:"initial"},setSmsOtpState:S,siweState:{status:"initial"},setSiweState:S,oAuthState:{status:"initial"},setOAuthState:S}),m=()=>i(T),W=t({ready:!1,authenticated:!1,user:null,walletConnectors:null,connectWallet:S,login:S,connectOrCreateWallet:S,linkEmail:S,linkPhone:S,linkFarcaster:S,linkWallet:S,startCrossAppAuthFlow:S,linkGoogle:S,linkTwitter:S,linkDiscord:S,linkGithub:S,linkSpotify:S,linkInstagram:S,linkTelegram:S,linkTiktok:S,linkLinkedIn:S,linkApple:S,linkPasskey:S,updateEmail:S,updatePhone:S,logout:S,getAccessToken:S,getEthereumProvider:S,getEthersProvider:S,getWeb3jsProvider:S,unlinkEmail:S,unlinkPhone:S,unlinkWallet:S,unlinkGoogle:S,unlinkTwitter:S,unlinkDiscord:S,unlinkGithub:S,unlinkSpotify:S,unlinkInstagram:S,unlinkTiktok:S,unlinkLinkedIn:S,unlinkApple:S,unlinkCrossAppAccount:S,unlinkFarcaster:S,unlinkTelegram:S,unlinkPasskey:S,setActiveWallet:S,forkSession:S,createWallet:S,importWallet:S,signMessage:S,signTypedData:S,enrollInMfa:S,initEnrollmentWithSms:S,initEnrollmentWithTotp:S,initEnrollmentWithPasskey:S,promptMfa:S,init:S,submitEnrollmentWithSms:S,submitEnrollmentWithTotp:S,submitEnrollmentWithPasskey:S,unenroll:S,submit:S,cancel:S,sendTransaction:S,sendSolanaTransaction:S,exportWallet:S,setWalletPassword:S,setWalletRecovery:S,requestFarcasterSignerFromWarpcast:S,getFarcasterSignerPublicKey:S,signFarcasterMessage:S,createGuestAccount:S,initLoginWithEmail:S,initLoginWithSms:S,otpState:{status:"initial"},loginWithCode:S,fundWallet:S,initLoginWithHeadlessOAuth:S,loginWithHeadlessOAuth:S,generateSiweMessage:S,linkWithSiwe:S,signMessageWithCrossAppWallet:S,signTypedDataWithCrossAppWallet:S,sendTransactionWithCrossAppWallet:S,isHeadlessOAuthLoading:!1,isModalOpen:!1,mfaMethods:[]}),g=()=>i(W);export{T as I,r as P,d as a,a as b,o as c,l as d,u as e,_ as f,s as g,g as h,p as i,E as j,A as k,W as l,c as m,S as n,h as o,m as u};
